### EXPORT IDEMPOTENCE ###

- vars:
    os_migrate_routers_filter:
      - regex: '^osm_'

  ansible.builtin.include_role:
    name: os_migrate.os_migrate.export_routers
- name: re-load resources for idempotency test
  ansible.builtin.set_fact:
    router_resources_idem: "{{ (lookup('file', os_migrate_data_dir + '/routers.yml')\
      \ | from_yaml) ['resources'] }}"

- name: verify that export file did not change
  ansible.builtin.assert:
    that:
      - router_resources_idem == router_resources
    fail_msg: |
      router_resources_idem:
      {{ router_resources_idem | to_nice_yaml }}
      router_resources:
      {{ router_resources | to_nice_yaml }}

### IMPORT IDEMPOTENCE ###

- name: look up osm_router dst cloud
  register: router_import_idem_before

  ansible.builtin.os_migrate.os_migrate.os_routers_info:
    auth: "{{ os_migrate_dst_auth }}"
    auth_type: "{{ os_migrate_dst_auth_type|default(omit) }}"
    region_name: "{{ os_migrate_dst_region_name|default(omit) }}"
- ansible.builtin.include_role:
    name: os_migrate.os_migrate.import_routers

- name: look up osm_router in dst cloud again
  register: router_import_idem_after

  ansible.builtin.os_migrate.os_migrate.os_routers_info:
    auth: "{{ os_migrate_dst_auth }}"
    auth_type: "{{ os_migrate_dst_auth_type|default(omit) }}"
    region_name: "{{ os_migrate_dst_region_name|default(omit) }}"
- name: ensure updated_at for osm_router did not change
  ansible.builtin.assert:
    that:
      - router_import_idem_before['openstack_routers'][0].updated_at != None
      - "router_import_idem_before['openstack_routers'][0]['updated_at'] == router_import_idem_after['openstack_routers'][0]['updated_at']"
    fail_msg: |
      router_import_idem_before updated_at:
      {{ router_import_idem_before['openstack_routers'][0].updated_at }}
      router_import_idem_after updated_at:
      {{ router_import_idem_after['openstack_routers'][0].updated_at }}
