# FIXME: Find a way we can test the whole playbook rather than just
# the role. Either make sure we're not in a play here and use
# import_playbook, or spawn an ansible-playbook subprocess? The latter
# might be actually a more precise way to test the real end-user
# experience.

- name: Workloads tasks
  block:
    - vars:
      # This expression should export all osm_ workloads
      # skipping the universal conversion host (osm_uch)
      # which is used to move the VM's.
      # We create it on in seed.yml but we dont export it.
        os_migrate_workloads_filter:
          - regex: '^osm_(?!uch)'

      ansible.builtin.include_role:
        name: os_migrate.os_migrate.export_workloads
    - name: set boot disk copy
      when: set_boot_volume_copy|default(false)|bool

      ansible.builtin.replace:
        path: "{{ os_migrate_data_dir }}/workloads.yml"
        regexp: "boot_disk_copy: false"
        replace: "boot_disk_copy: true"
    - name: load exported data
      ansible.builtin.set_fact:
        resources: "{{ (lookup('file', os_migrate_data_dir + '/workloads.yml') | from_yaml) ['resources'] }}"

    - name: verify data contents
      ansible.builtin.assert:
        that:
          - (resources | community.general.json_query("[?params.name == 'osm_server'].params.name") == ['osm_server'])

    - ansible.builtin.include_role:
        name: os_migrate.os_migrate.import_workloads
